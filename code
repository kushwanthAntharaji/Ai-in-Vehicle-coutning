import cv2
import numpy as np

min_contour_w = 40  # 40 minimum width
min_contour_h = 40  # 40 minimum height
offset = 10  # 10
line_height = 550  # 550
found = []
cars = 0


def get_centroid(x, y, w, h):
    x1 = int(w / 2)
    y1 = int(h / 2)

    cx = x + x1
    cy = y + y1
    return cx, cy

cap = cv2.VideoCapture("C:\\Users\\sneha\\OneDrive\\Desktop\\Ai\\traffic.mp4")


cap.set(3, 1920)
cap.set(4, 1080)

if cap.isOpened():
    con, f1 = cap.read() #frame1 - con-condition
else:
    con = False
#con, f1 = cap.read()
con, f2 = cap.read()    #frame2

while con:
    diff = cv2.absdiff(f1, f2)
    grey = cv2.cvtColor(diff, cv2.COLOR_BGR2GRAY)
    blur = cv2.GaussianBlur(grey, (5, 5), 0)
    con, th = cv2.threshold(blur, 20, 255, cv2.THRESH_BINARY)
    dilated = cv2.dilate(th, np.ones((3, 3)))
    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (2, 2))


    closing = cv2.morphologyEx(dilated, cv2.MORPH_CLOSE, kernel)
    contours, h = cv2.findContours(closing, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    for (i, c) in enumerate(contours):
        (x, y, w, h) = cv2.boundingRect(c)
        contour_valid = (w >= min_contour_w) and (h >= min_contour_h)

        if not contour_valid:
            continue
        cv2.rectangle(f1, (x - 10, y - 10), (x + w + 10, y + h + 10), (255, 255, 255), 2)

        cv2.line(f1, (0, line_height), (1200, line_height), (0, 255, 0), 5)
        centroid = get_centroid(x, y, w, h)
        found.append(centroid)
        cv2.circle(f1, centroid, 4, (0, 0, 255), 1)
        cx, cy = get_centroid(x, y, w, h)
        for (x, y) in found:
            if y < (line_height + offset) and y > (line_height - offset):
                cars = cars + 1
                found.remove((x, y))
                print(cars)

    cv2.putText(f1, "Total Cars Detected: " + str(cars), (450, 90), cv2.FONT_HERSHEY_TRIPLEX, 1,
                (255, 170, 0), 2)

    cv2.putText(f1, "AI In Vehicle Counting", (200, 50), cv2.FONT_HERSHEY_TRIPLEX, 2,
                (0, 0, 0), 3)

    cv2.imshow("Vehicle Counting", f1)
    cv2.imshow("Difference", th)


    if cv2.waitKey(30) & 0xFF == ord('q'):
        break
    f1 = f2
    con, f2 = cap.read()
cv2.destroyAllWindows()
cap.release()
